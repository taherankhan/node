<%- include('../header') %>

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Edit Product</title>
  <link rel="stylesheet" href="/css/product/edit-product.css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
</head>

<body>
  <div class="edit-product-container">
    <h2 class="text-center">Edit Product</h2>
    <img src="/images/<%= product.imageUrl %>" class="card-img-top" alt="<%= product.name %>" />
    <form
    action="/products/<%= product._id %>/edit"
    method="POST"
    enctype="multipart/form-data"
    onsubmit="return checkforblank()"
  >
  <div class="form-group">
    <label for="image">Image:</label>
    <input type="file" name="image" id="image" accept="image/*"> <!-- Add accept attribute to accept only image files -->
    <span id="imageError" class="user-message user-message--error"></span>
  </div>

      <div class="mb-3">
        <label for="name" class="form-label">Product Name</label>
        <input type="text" class="form-control" id="name" name="name" value="<%= product.name %>" maxlength="50" autocomplete="off" />
        <div id="nameError" class="error-message"></div>
        <!-- Add error message element -->
      </div>

      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" name="description" rows="1.5" maxlength="500">
<%= product.description %></textarea>
        <div id="descriptionError" class="error-message"></div>
        <!-- Add error message element -->
      </div>
      <div class="mb-3">
        <label for="price" class="form-label">Price $</label>
        <input type="text" class="form-control" id="price" name="price" value="<%= product.price %>" maxlength="7" pattern="\d+(\.\d{1,2})?" oninput="validatePrice(this)" autocomplete="off" />
        <div id="priceError" class="error-message"></div>
        <!-- Add error message element -->
      </div>
      <div class="mb-3">
        <label for="quantity" class="form-label">Quantity</label>
        <input type="text" class="form-control" id="quantity" name="quantity" value="<%= product.quantity %>" maxlength="7" autocomplete="off" />
        <div id="quantityError" class="error-message"></div>
        <!-- Add error message element -->
      </div>
      <div class="mb-3">
        <label for="category" class="form-label">Category</label>
        <select class="form-control" id="category" name="category">
          <% categories.forEach(category => { %>
          <option value="<%= category._id %>" <%= product.category.toString() === category._id.toString() ? 'selected' : '' %>><%= category.name %></option>
          <% }); %>
        </select>
      </div>
      <button type="submit" class="btn btn-primary" id="updateProductBtn">Update Product</button>
    </form>
  </div>

  <script>
    function validatePrice(input) {
      // Remove any non-numeric characters except '.'
      input.value = input.value.replace(/[^\d.]/g, "");

      // Ensure only one decimal point
      if ((input.value.match(/\./g) || []).length > 1) {
        input.value = input.value.slice(0, -1);
      }

      // Restrict digits after decimal to two
      if (input.value.includes(".")) {
        var parts = input.value.split(".");
        if (parts[1].length > 2) {
          parts[1] = parts[1].slice(0, 2);
          input.value = parts.join(".");
        }
        // Automatically add leading zero if input starts with ".xx"
        if (parts[0] === "" && parts[1].length === 1) {
          input.value = "0" + input.value;
        }
      }

      // Ensure that the price is greater than zero
      if (parseFloat(input.value) <= 0) {
        input.value = "";
      }
    }

    function validateQuantity(input) {
      // Remove any non-numeric characters
      input.value = input.value.replace(/\D/g, "");

      // Ensure that the quantity is greater than zero
      if (parseInt(input.value) <= 0) {
        input.value = "";
      }
    }

    function checkforblank() {
      var name = document.getElementById("name").value.trim();
      var description = document.getElementById("description").value.trim();
      var price = document.getElementById("price").value.trim();
      var quantity = document.getElementById("quantity").value.trim();
      // var image = document.getElementById("image").value;


      var nameError = document.getElementById("nameError");
      var descriptionError = document.getElementById("descriptionError");
      var priceError = document.getElementById("priceError");
      var quantityError = document.getElementById("quantityError");
      // var imageError = document.getElementById("imageError");


      var hasError = false;

      if (name === "") {
        nameError.innerHTML = "Please enter a product name.";
        hasError = true;
      } else {
        nameError.innerHTML = "";
      }

      if (description === "") {
        descriptionError.innerHTML = "Please enter a description.";
        hasError = true;
      } else {
        descriptionError.innerHTML = "";
      }

      if (price === "") {
        priceError.innerHTML = "Please enter a price.";
        hasError = true;
      } else {
        priceError.innerHTML = "";
      }

      if (quantity === "") {
        quantityError.innerHTML = "Please enter a quantity.";
        hasError = true;
      } else {
        quantityError.innerHTML = "";
      }
       // Validate image file type
  if (image !== "") {
    var fileExtension = image.split('.').pop().toLowerCase();
    if (!(fileExtension === 'jpg' || fileExtension === 'jpeg' || fileExtension === 'png' || fileExtension === 'webp' ||fileExtension === 'gif')) {
      imageError.innerHTML = "Please select a valid image file (JPG, JPEG, PNG, GIF,webp).";
      hasError = true;
    }
  } else {
    imageError.innerHTML = "Please select an image.";
    hasError = true;
  }


      return !hasError;
    }

    document.getElementById("name").addEventListener("input", function() {
      document.getElementById("nameError").innerHTML = "";
      checkforblank();
    });

    document.getElementById("description").addEventListener("input", function() {
      document.getElementById("descriptionError").innerHTML = "";
      checkforblank();
    });

    document.getElementById("price").addEventListener("input", function() {
      document.getElementById("priceError").innerHTML = "";
      checkforblank();
    });

    document.getElementById("quantity").addEventListener("input", function() {
      document.getElementById("quantityError").innerHTML = "";
      checkforblank();
      validateQuantity(this);
    });
  </script>
</body>

</html>